pub const ARABIC_ALLOWED: [u32; 47] = [
    0x621, 0x622, 0x623, 0x624, 0x625, 0x626, 0x627, 0x628, 0x629, 0x62A, 0x62B, 0x62C, 0x62D,
    0x62E, 0x62F, 0x630, 0x631, 0x632, 0x633, 0x634, 0x635, 0x636, 0x637, 0x638, 0x639, 0x63A,
    0x641, 0x642, 0x643, 0x644, 0x645, 0x646, 0x647, 0x648, 0x649, 0x64A, 0x64B, 0x64D, 0x651,
    0x670, 0x67E, 0x686, 0x698, 0x6A9, 0x6AF, 0x6C0, 0x6CC,
];

pub const OTHER_ALLOWED: [u32; 82] = [
    0x0020, 0x0026, 0x0027, 0x0028, 0x0029, 0x002A, 0x002B, 0x002C, 0x002D, 0x002E, 0x002F, 0x0030,
    0x0031, 0x0032, 0x0033, 0x0034, 0x0035, 0x0036, 0x0037, 0x0038, 0x0039, 0x003B, 0x003D, 0x003F,
    0x0041, 0x004E, 0x0050, 0x0051, 0x0053, 0x005A, 0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066,
    0x0067, 0x0068, 0x0069, 0x006A, 0x006B, 0x006C, 0x006D, 0x006E, 0x006F, 0x0070, 0x0071, 0x0072,
    0x0073, 0x0074, 0x0075, 0x0076, 0x0077, 0x0079, 0x007A, 0x00E1, 0x00EE, 0x00FC, 0x0101, 0x0113,
    0x0115, 0x012B, 0x014D, 0x016B, 0x02BB, 0x02BC, 0x02CC, 0x0324, 0x0331, 0x1E25, 0x1E35, 0x1E43,
    0x1E47, 0x1E5B, 0x1E63, 0x1E6D, 0x1E89, 0x1E93, 0x1E95, 0x1E96, 0x2014, 0x2018,
];

// Should split this into categories for Greek, Hebrew, etc.
pub const DEFS_ONLY: [u32; 161] = [
    0x0021, 0x0022, 0x003A, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 0x0048, 0x0049, 0x004A,
    0x004B, 0x004C, 0x004D, 0x004F, 0x0052, 0x0054, 0x0055, 0x0056, 0x0057, 0x0058, 0x0059, 0x005B,
    0x005C, 0x005D, 0x0078, 0x007C, 0x00A3, 0x00AF, 0x00B9, 0x00BC, 0x00BD, 0x00C6, 0x00C9, 0x00E0,
    0x00E2, 0x00E6, 0x00E7, 0x00E8, 0x00E9, 0x00EA, 0x00ED, 0x00F1, 0x00F2, 0x00F4, 0x00F6, 0x0100,
    0x012A, 0x0153, 0x015B, 0x016A, 0x02D8, 0x0392, 0x039C, 0x039D, 0x03A0, 0x03A3, 0x03A8, 0x03AC,
    0x03AD, 0x03AE, 0x03AF, 0x03B1, 0x03B2, 0x03B3, 0x03B4, 0x03B5, 0x03B6, 0x03B7, 0x03B8, 0x03B9,
    0x03BA, 0x03BB, 0x03BC, 0x03BD, 0x03BE, 0x03BF, 0x03C0, 0x03C1, 0x03C2, 0x03C3, 0x03C4, 0x03C5,
    0x03C6, 0x03C7, 0x03C8, 0x03C9, 0x03CC, 0x03CD, 0x03CE, 0x03DD, 0x05B0, 0x05B4, 0x05B7, 0x05B8,
    0x05BC, 0x05D0, 0x05D4, 0x05D9, 0x05DA, 0x05DC, 0x05DE, 0x05DF, 0x05E2, 0x05E7, 0x05E8, 0x05EA,
    0x0640, 0x064C, 0x064E, 0x064F, 0x0650, 0x0652, 0x0653, 0x1E0D, 0x1E34, 0x1E45, 0x1E62, 0x1E94,
    0x1F00, 0x1F04, 0x1F05, 0x1F08, 0x1F10, 0x1F11, 0x1F14, 0x1F21, 0x1F30, 0x1F31, 0x1F34, 0x1F36,
    0x1F40, 0x1F44, 0x1F50, 0x1F51, 0x1F55, 0x1F60, 0x1F61, 0x1F64, 0x1F70, 0x1F72, 0x1F74, 0x1F76,
    0x1F78, 0x1F7A, 0x1F7C, 0x1FC6, 0x1FD6, 0x1FE4, 0x1FE5, 0x1FE6, 0x2080, 0x2082, 0x2085, 0x2089,
    0x2251, 0xFB2A, 0xFB35, 0xFB44, 0xFB4B,
];

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn lists_sorted() {
        let mut arabic = ARABIC_ALLOWED;
        let mut other = OTHER_ALLOWED;
        let mut defs = DEFS_ONLY;

        arabic.sort_unstable();
        other.sort_unstable();
        defs.sort_unstable();

        assert_eq!(arabic, ARABIC_ALLOWED);
        assert_eq!(other, OTHER_ALLOWED);
        assert_eq!(defs, DEFS_ONLY);
    }
}
